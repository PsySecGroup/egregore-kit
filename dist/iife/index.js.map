{"version":3,"sources":["../../node_modules/easy-match/easy-match.js","../../node_modules/is-negative-zero/index.js","../../src/httpRequest.ts","../../src/vector.ts","../../src/quadrantPoint.ts","../../src/space.ts"],"sourcesContent":["'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nconst escapeStringRegexp = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n\nconst reCache = new Map();\n\nfunction makeRe(pattern) {\n\tconst cacheKey = pattern;\n\n\tif (reCache.has(cacheKey)) {\n\t\treturn reCache.get(cacheKey);\n\t}\n\n\tvar re = /^\\/((?:\\\\\\/|[^\\/])+)\\/$/;\n\n\tif(re.test(pattern)){\n\t\tlet str = re.exec( pattern );\n\t\tif(str)\n\t\t{\n\t\t\tconst re1 = new RegExp(str[1], 'i');\n\t\t\treCache.set(cacheKey,re1);\n\t\t\treturn re1;\n\t\t}\n\t\telse{\n\t\t\treCache.set(cacheKey,null);\n\t\t\treturn null;\n\t\t}\n\t}\n\telse if(pattern.includes('*')){\n\t\t//debugger;\n\t\tpattern = escapeStringRegexp(pattern).replace(/\\\\\\*/g, '.*');\n\t\t\n\t\tconst re2 = new RegExp(`^${pattern}$`, 'i');\n\t\treCache.set(cacheKey, re2);\n\t\treturn re2;\n\t}\n\telse{\n\t\t//debugger;\n\t\tconst re3 = new RegExp(`${pattern}`, 'i');\n\t\treCache.set(cacheKey, re3);\n\t\treturn re3;\n\t}\n\n}\n\nfunction EasyMatch(inputs, patterns,stat){\n    if (typeof stat === 'undefined') stat = false;\n\tlet ret = { matches:[],others:[],stat:[],ismatch:false};\n\n\tif(!Array.isArray(inputs)) inputs=[inputs];\n\n\tif (!(Array.isArray(inputs) && Array.isArray(patterns))) {\n\t\tthrow new TypeError(`Expected two arrays, got ${typeof inputs} ${typeof patterns}`);\n\t}\n\n\tif (patterns.length === 0) {\n\t\tret.yes= inputs;\n\t\treturn ret;\n\t}\n\n\tlet patternMap = new Map();\n\n\tfor(let pattern of patterns)\n\t{\n\t\tlet patternRegex = makeRe(pattern);\n\t\tpatternMap.set(pattern,{\"pattern\":pattern,\"regex\":patternRegex,\"matches\":[]});\n\t}\n\n\tlet isMatch = false;\n\tfor (let input of inputs) {\n\t\tisMatch = false;\n\n\t\tfor (var [key, value] of patternMap){\n\t\t\tif (value.regex != null && value.regex.test(input)) {\n\t\t\t\tisMatch = true;\n\t\t\t\tif(stat) value.matches.push(input);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isMatch) {\n\t\t\tret.matches.push(input);\n\t\t}\n\t\telse {\n\t\t\tret.others.push(input);\n\t\t}\n\t}\n\tlet patternMapArr =  Array.from(patternMap.values());\n\tif(stat) ret.stat = patternMapArr.filter(e=>e.matches.length>0);\n\n\tret.ismatch = ret.matches.length > 0 ? true : false;\n\n\treturn ret;\n}\n\nmodule.exports = EasyMatch;\n\n//for testing purpose.\nif (!module.parent) {\n\tconsole.log(EasyMatch(['it@abc.com','itit@abc.com','xyz@abc.com', 'aaa\\fff/bar.pdf', 'mooo','\\nasdee'], ['it@*','*it@*', '*.pdf','*@*abc*','moo','/\\\\sasd/']));\n}\n","'use strict';\n\nmodule.exports = function isNegativeZero(number) {\n\treturn number === 0 && (1 / number) === -Infinity;\n};\n\n","import EasyMatch from 'easy-match'\n\ntype HttpRequestMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\ninterface HttpRequestJson {\n  method: HttpRequestMethod\n  endpoint: string\n  time?: number\n}\n\n/**\n * \n */\nexport class HttpRequest {\n  method: HttpRequestMethod\n  endpoint: string\n  time: number\n\n  constructor (method: HttpRequestMethod | HttpRequestJson, endpoint?: string, time: number = 0) {\n    if (typeof method === 'string') {\n      this.method = method\n      this.endpoint = endpoint\n      this.time = time\n    } else {\n      this.method = method.method\n      this.endpoint = method.endpoint\n      this.time = method.time || 0\n    }\n  }\n\n  /**\n   * \n   */\n  isMatch (query: HttpRequest) {\n    return EasyMatch([this.method], [query.method]).ismatch && EasyMatch([this.endpoint], [query.endpoint]).ismatch\n  }\n}\n","import { QuadrantPoint, QuadrantType } from \"./quadrantPoint\"\n\nexport class Vector {\n  type: QuadrantType\n  content: number\n  context: number\n\n  constructor (point: QuadrantPoint) {\n    this.type = point.type\n    this.content = point.content\n    this.context = point.context\n  }\n}\n","import { Vector } from \"./vector\"\n\nexport enum QuadrantType {\n  socialCreate,\n  personalCreate,\n  personalDestroy,\n  socialDestroy\n}\n\ninterface QuadrantPointJson {\n  type: QuadrantType\n  content: number\n  context: number\n  time?: number\n}\n\n/**\n * \n */\nexport class QuadrantPoint {\n  type: QuadrantType\n  time: number\n  content: number\n  context: number\n\n  constructor (type: QuadrantType | QuadrantPointJson, content: number = 0, context: number = 0, time: number = 0) {\n    if(typeof type === 'number') {\n      this.type = type\n      this.content = content\n      this.context = context\n      this.time = time\n    } else {\n      const json = type as QuadrantPointJson\n      this.type = json.type\n      this.content = json.content\n      this.context = json.context\n      this.time = json.time\n    }\n  }\n\n  /**\n   * \n   */\n  addContext (value: number = 1) {\n    this.context += value\n  }\n\n  /**\n   * \n   */\n  addContent (value: number = 1) {\n    this.content += value\n  }\n\n  /**\n   * \n   */\n  toVector () {\n    return new Vector(this)\n  }\n}","const isNegativeZero = require( 'is-negative-zero')\nimport { HttpRequest } from \"./httpRequest\"\nimport { QuadrantPoint, QuadrantType } from \"./quadrantPoint\"\nimport { Vector } from \"./vector\"\n\ninterface MethodStringMap {\n  social: string[]\n  personal: string[]\n  create: string[]\n  destroy: string[]\n}\n\ninterface MethodMap {\n  social: HttpRequest[]\n  personal: HttpRequest[]\n  create: HttpRequest[]\n  destroy: HttpRequest[]\n}\n\ninterface QuadrantPoints {\n  [QuadrantType.socialCreate]: QuadrantPoint[],\n  [QuadrantType.personalCreate]: QuadrantPoint[],\n  [QuadrantType.personalDestroy]: QuadrantPoint[],\n  [QuadrantType.socialDestroy]: QuadrantPoint[]\n}\n\nconst PI_RADIAN = 180 / Math.PI\n\n/**\n * \n */\nfunction requestSearch (list: HttpRequest[], request: HttpRequest) {\n  return list.find(endpoint => request.isMatch(endpoint)) !== undefined\n}\n\n/**\n * \n */\n function getDegrees (a: Vector, b: Vector, offset = 360) {\n  const slope = (b.context - a.context) / (b.content - a.content)\n  const degree = Math.atan(slope) * PI_RADIAN\n  let angle = degree % 360;\n  \n  if (angle < 0) {\n    angle += offset\n  } else if (isNegativeZero(angle)) {\n    angle = 180\n  }\n  \n  return angle\n}\n\n/**\n * \n */\nexport class Space {\n  private endpoints: MethodMap\n  private points: QuadrantPoints = {\n    [QuadrantType.socialCreate]: [],\n    [QuadrantType.personalCreate]: [],\n    [QuadrantType.personalDestroy]: [],\n    [QuadrantType.socialDestroy]: []\n  }\n\n  constructor (endpoints: MethodMap | MethodStringMap) {\n    const social: HttpRequest[] = typeof endpoints.social[0] !== 'string'\n      ? endpoints.social as HttpRequest[]\n      : endpoints.social.map(endpoint => {\n        const parts = endpoint.split(' ')\n        return new HttpRequest(parts[0], parts[1])\n      }) as HttpRequest[]\n\n    const personal: HttpRequest[] = typeof endpoints.personal[0] !== 'string'\n    ? endpoints.personal as HttpRequest[]\n    : endpoints.personal.map(endpoint => {\n      const parts = endpoint.split(' ')\n      return new HttpRequest(parts[0], parts[1])\n    }) as HttpRequest[]\n\n    const create: HttpRequest[] = typeof endpoints.create[0] !== 'string'\n    ? endpoints.create as HttpRequest[]\n    : endpoints.create.map(endpoint => {\n      const parts = endpoint.split(' ')\n      return new HttpRequest(parts[0], parts[1])\n    }) as HttpRequest[]\n\n    const destroy: HttpRequest[] = typeof endpoints.destroy[0] !== 'string'\n    ? endpoints.destroy as HttpRequest[]\n    : endpoints.destroy.map(endpoint => {\n      const parts = endpoint.split(' ')\n      return new HttpRequest(parts[0], parts[1])\n    }) as HttpRequest[]\n\n    this.endpoints = {\n      social,\n      personal,\n      create,\n      destroy\n    }\n  }\n\n  /**\n   * Convert an HTTP request into a quandrant point\n   */\n  addRequests (requests: HttpRequest[]) {\n    for (const request of requests) {\n      if (requestSearch(this.endpoints.social, request)) {\n        this.points[QuadrantType.socialCreate].push(new QuadrantPoint(QuadrantType.socialCreate, 0, 1, request.time))\n      }\n      \n      if (requestSearch(this.endpoints.personal, request)) {\n        this.points[QuadrantType.personalCreate].push(new QuadrantPoint(QuadrantType.personalCreate, 0, -1, request.time))\n      }\n      \n      if (requestSearch(this.endpoints.create, request)) {\n        this.points[QuadrantType.personalDestroy].push(new QuadrantPoint(QuadrantType.personalDestroy, 1, 0, request.time))\n      }\n      \n      if (requestSearch(this.endpoints.destroy, request)) {\n        this.points[QuadrantType.socialDestroy].push(new QuadrantPoint(QuadrantType.socialDestroy, -1, 0, request.time))\n      }\n    }\n  }\n\n  /**\n   * \n   */\n  getPoints () {\n    return[\n      ...this.points[QuadrantType.socialCreate],\n      ...this.points[QuadrantType.personalCreate],\n      ...this.points[QuadrantType.personalDestroy],\n      ...this.points[QuadrantType.socialDestroy]\n    ]\n  }\n\n  /**\n   * \n   */\n   private _reduce (points: QuadrantPoint[]) {\n    if (points.length === 0) {\n      return false\n    }\n\n    let content = 0\n    let context = 0\n\n    for (const point of points) {\n      context += point.context\n      content += point.content\n    }\n\n    const result = new QuadrantPoint(points[0].type, content, context).toVector()\n\n    return result\n  }\n\n  /**\n   * \n   */\n  getVectors (users: number) {\n    const vectors = [\n      this._reduce(this.points[QuadrantType.socialCreate]),\n      this._reduce(this.points[QuadrantType.personalCreate]),\n      this._reduce(this.points[QuadrantType.personalDestroy]),\n      this._reduce(this.points[QuadrantType.socialDestroy])\n    ].filter(vector => vector !== false) as Vector[]\n\n    const result = {\n      temperature: 0,\n      pressure: 0,\n      vectors,\n      angles: []\n    }\n\n    for (let i = 0, len = result.vectors.length; i < len; i++) {\n      const vector = result.vectors[i]\n      const nextVector = result.vectors[i + 1] === undefined\n        ? result.vectors[0]\n        : result.vectors[i + 1]\n\n      result.angles.push(getDegrees(vector, nextVector, 360 - (i * 90)))\n      result.temperature += vector.context\n      result.pressure +=  vector.content\n    }\n\n    result.temperature /= users\n    result.pressure /= users\n\n    return result\n  }\n}"],"mappings":"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","names":[]}