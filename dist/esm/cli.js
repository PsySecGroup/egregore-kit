#!/bin/bash
var a=(s,t)=>()=>(t||s((t={exports:{}}).exports,t),t.exports);var p=a((j,u)=>{u.exports={name:"egregore-kit",description:"Tools to detect egregore activity.",version:"1.0.1",author:"The PsySec Group",license:"MIT",bugs:{url:"https://github.com/PsySecGroup/egregore-kit/issues"},homepage:"https://github.com/PsySecGroup/egregore-kit#readme",repository:{type:"git",url:"git+https://github.com/PsySecGroup/egregore-kit.git"},scripts:{start:"node -r source-map-support/register dist/index.js",cli:"node -r source-map-support/register dist/cli.js",dev:`echo 'Type "npm run sb-watch" to get started'`,build:"tsup-node --legacy-output --dts --minify --format esm,cjs,iife","sb-watch":`nodemon --watch src/ -e ts,tsx,js --exec "tsup-node --dts --onSuccess 'node -r source-map-support/register dist/index.js'"`,watch:"tsup-node --watch --dts --onSuccess 'node -r source-map-support/register dist/index.js'",test:`nodemon --watch tests/ --watch src/ -e ts,tsx,js --exec "tsup-node --entry.tests=tests/index.ts --onSuccess 'uvu -r source-map-support/register dist ^tests.js$'"`},tsup:{entry:["src/index.ts","src/cli.ts"],splitting:!1,sourcemap:!0,clean:!1,dts:!1},main:"./dist/index.js",module:"./dist/esm/index.js",types:"./dist/index.d.ts",files:["/dist"],devDependencies:{"@types/node":"^17.0.41",nodemon:"^2.0.16","source-map-support":"^0.5.21",tsup:"^6.1.0",typescript:"^4.7.3",uvu:"^0.5.3"},dependencies:{commander:"^9.3.0",dotenv:"^16.0.3","easy-match":"^1.1.5",fastify:"^4.7.0","is-negative-zero":"^2.0.2","ts-node":"^10.8.1"}}});import{Command as d}from"commander";async function c(s){return new Promise(t=>{let e=process.openStdin();e.on("data",async function(r){let i=[];r.toString().split(`
`).forEach(n=>{n.trim()!==""&&i.push(n)}),await s(i)}),e.on("end",function(){t(!0)})})}var{name:m,description:g,version:l}=p(),o=new d;o.name(m).description(g).version(l);o.command("split").description("").argument("<string>","string to split").option("--first","display just the first substring").option("-s, --separator <char>","separator character",",").action((s,{first:t,separator:e})=>{let r=t?1:void 0;console.log(s.split(e,r))});async function h(){await c(async s=>{console.log(s)}),o.parse()}h();
//# sourceMappingURL=cli.js.map